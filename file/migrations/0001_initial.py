# Generated by Django 5.2.2 on 2025-07-13 23:03

import django.db.models.deletion
import file.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0024_store_completion_message'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DigitalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='파일명')),
                ('description', models.TextField(blank=True, verbose_name='파일 설명')),
                ('file', models.FileField(upload_to='digital_files/%Y/%m/%d/', validators=[file.models.validate_file_size], verbose_name='파일')),
                ('original_filename', models.CharField(blank=True, max_length=255, verbose_name='원본 파일명')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='파일 크기(bytes)')),
                ('file_hash', models.CharField(blank=True, editable=False, max_length=64, verbose_name='파일 해시')),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='digital_files/previews/%Y/%m/%d/', verbose_name='미리보기 이미지')),
                ('price_display', models.CharField(choices=[('free', '무료'), ('sats', '사토시 가격'), ('krw', '원화연동 가격')], default='free', max_length=10, verbose_name='가격 표시 방식')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='가격(satoshi)')),
                ('price_krw', models.PositiveIntegerField(blank=True, help_text='원화 단위', null=True, verbose_name='원화 가격')),
                ('is_discounted', models.BooleanField(default=False, verbose_name='할인 적용')),
                ('discounted_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='할인가(satoshi)')),
                ('discounted_price_krw', models.PositiveIntegerField(blank=True, help_text='원화 단위', null=True, verbose_name='원화 할인가')),
                ('discount_end_date', models.DateField(blank=True, null=True, verbose_name='할인 종료일')),
                ('discount_end_time', models.TimeField(blank=True, null=True, verbose_name='할인 종료시간')),
                ('max_downloads', models.PositiveIntegerField(blank=True, help_text='비워두면 무제한', null=True, verbose_name='최대 다운로드 횟수')),
                ('download_expiry_days', models.PositiveIntegerField(blank=True, help_text='구매 후 다운로드 가능 기간, 비워두면 무제한', null=True, verbose_name='다운로드 유효기간(일)')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('is_temporarily_closed', models.BooleanField(default=False, verbose_name='일시중단')),
                ('purchase_message', models.TextField(blank=True, verbose_name='구매완료 안내메시지')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='digital_files', to='stores.store')),
            ],
            options={
                'verbose_name': '디지털 파일',
                'verbose_name_plural': '디지털 파일',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=100, unique=True, verbose_name='주문번호')),
                ('status', models.CharField(choices=[('pending', '결제 대기'), ('confirmed', '구매 확정'), ('cancelled', '구매 취소')], default='pending', max_length=20, verbose_name='상태')),
                ('is_temporary_reserved', models.BooleanField(default=True, verbose_name='임시 예약 상태')),
                ('reservation_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='예약 만료 시간')),
                ('auto_cancelled_reason', models.CharField(blank=True, max_length=100, verbose_name='자동 취소 사유')),
                ('price', models.PositiveIntegerField(verbose_name='구매가(satoshi)')),
                ('is_discounted', models.BooleanField(default=False, verbose_name='할인 적용')),
                ('discount_rate', models.PositiveIntegerField(default=0, verbose_name='할인율(%)')),
                ('original_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='원래 가격(satoshi)')),
                ('payment_hash', models.CharField(blank=True, max_length=255, verbose_name='결제 해시')),
                ('payment_request', models.TextField(blank=True, verbose_name='결제 요청(인보이스)')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='결제 완료 시간')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='구매 확정 시간')),
                ('confirmation_message_sent', models.BooleanField(default=False, verbose_name='확정 안내 발송 여부')),
                ('download_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='다운로드 만료일')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('digital_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='file.digitalfile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '파일 주문',
                'verbose_name_plural': '파일 주문',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileDownloadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP 주소')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True, verbose_name='다운로드 시간')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_logs', to='file.fileorder')),
            ],
            options={
                'verbose_name': '다운로드 로그',
                'verbose_name_plural': '다운로드 로그',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='digitalfile',
            index=models.Index(fields=['store'], name='file_digita_store_i_e30880_idx'),
        ),
        migrations.AddIndex(
            model_name='digitalfile',
            index=models.Index(fields=['is_active'], name='file_digita_is_acti_f70f97_idx'),
        ),
        migrations.AddIndex(
            model_name='digitalfile',
            index=models.Index(fields=['created_at'], name='file_digita_created_ea764f_idx'),
        ),
        migrations.AddIndex(
            model_name='digitalfile',
            index=models.Index(fields=['store', 'is_active'], name='file_digita_store_i_5dff7a_idx'),
        ),
        migrations.AddIndex(
            model_name='digitalfile',
            index=models.Index(fields=['deleted_at'], name='file_digita_deleted_75a325_idx'),
        ),
        migrations.AddIndex(
            model_name='digitalfile',
            index=models.Index(fields=['store', 'deleted_at'], name='file_digita_store_i_89fefb_idx'),
        ),
        migrations.AddIndex(
            model_name='fileorder',
            index=models.Index(fields=['digital_file'], name='file_fileor_digital_8ffb84_idx'),
        ),
        migrations.AddIndex(
            model_name='fileorder',
            index=models.Index(fields=['user'], name='file_fileor_user_id_177448_idx'),
        ),
        migrations.AddIndex(
            model_name='fileorder',
            index=models.Index(fields=['status'], name='file_fileor_status_40c618_idx'),
        ),
        migrations.AddIndex(
            model_name='fileorder',
            index=models.Index(fields=['created_at'], name='file_fileor_created_74d2ce_idx'),
        ),
        migrations.AddIndex(
            model_name='fileorder',
            index=models.Index(fields=['digital_file', 'user'], name='file_fileor_digital_544db8_idx'),
        ),
        migrations.AddIndex(
            model_name='fileorder',
            index=models.Index(fields=['digital_file', 'status'], name='file_fileor_digital_77682d_idx'),
        ),
        migrations.AddIndex(
            model_name='fileorder',
            index=models.Index(fields=['user', 'status'], name='file_fileor_user_id_5c1d33_idx'),
        ),
        migrations.AddConstraint(
            model_name='fileorder',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'confirmed')), fields=('digital_file', 'user'), name='unique_confirmed_file_order_per_user'),
        ),
        migrations.AddIndex(
            model_name='filedownloadlog',
            index=models.Index(fields=['order'], name='file_filedo_order_i_951457_idx'),
        ),
        migrations.AddIndex(
            model_name='filedownloadlog',
            index=models.Index(fields=['downloaded_at'], name='file_filedo_downloa_48cdf8_idx'),
        ),
    ]
