# Generated by Django 5.2.2 on 2025-09-29 12:21

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0013_invoice_invoice_store_stat_cr_idx_and_more'),
        ('products', '0011_product_products_pr_is_temp_5ca076_idx_and_more'),
        ('stores', '0026_store_stores_stor_email_e_ff14a6_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_sats', models.PositiveIntegerField(verbose_name='결제 금액(사토시)')),
                ('currency', models.CharField(choices=[('BTC', 'BTC'), ('USD', 'USD')], default='BTC', max_length=10, verbose_name='결제 통화')),
                ('status', models.CharField(choices=[('pending', '대기'), ('processing', '진행 중'), ('failed', '실패'), ('completed', '완료')], default='pending', max_length=20, verbose_name='상태')),
                ('current_stage', models.PositiveSmallIntegerField(default=1, verbose_name='현재 단계')),
                ('payment_hash', models.CharField(blank=True, max_length=120, verbose_name='결제 해시')),
                ('payment_request', models.TextField(blank=True, verbose_name='인보이스 문자열')),
                ('invoice_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='인보이스 만료 시각')),
                ('soft_lock_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='소프트락 만료 시각')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='메타데이터')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시각')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시각')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to='orders.order', verbose_name='연결 주문')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to='stores.store', verbose_name='스토어')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '결제 트랜잭션',
                'verbose_name_plural': '결제 트랜잭션 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentStageLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stage', models.PositiveSmallIntegerField(verbose_name='단계')),
                ('status', models.CharField(choices=[('pending', '대기'), ('processing', '진행 중'), ('failed', '실패'), ('completed', '완료')], default='pending', max_length=20, verbose_name='상태')),
                ('message', models.CharField(blank=True, max_length=255, verbose_name='메시지')),
                ('detail', models.JSONField(blank=True, default=dict, verbose_name='세부 정보')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='기록 시각')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_logs', to='ln_payment.paymenttransaction', verbose_name='결제 트랜잭션')),
            ],
            options={
                'verbose_name': '결제 단계 로그',
                'verbose_name_plural': '결제 단계 로그',
                'ordering': ['transaction', 'stage', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItemReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(verbose_name='수량')),
                ('status', models.CharField(choices=[('active', '활성'), ('released', '해제'), ('converted', '전환')], default='active', max_length=20, verbose_name='상태')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='만료 시각')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='메타데이터')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시각')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시각')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='products.product', verbose_name='상품')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='ln_payment.paymenttransaction', verbose_name='결제 트랜잭션')),
            ],
            options={
                'verbose_name': '재고 예약',
                'verbose_name_plural': '재고 예약 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['store', 'created_at'], name='lnpay_tx_store_created_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['user', 'created_at'], name='lnpay_tx_user_created_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['status', 'current_stage'], name='lnpay_tx_status_stage_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['payment_hash'], name='lnpay_tx_payment_hash_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentstagelog',
            index=models.Index(fields=['transaction', 'stage'], name='lnpay_stage_tx_stage_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentstagelog',
            index=models.Index(fields=['created_at'], name='lnpay_stage_created_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitemreservation',
            index=models.Index(fields=['transaction', 'status'], name='lnpay_resv_tx_status_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitemreservation',
            index=models.Index(fields=['product', 'status'], name='lnpay_resv_product_status_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitemreservation',
            index=models.Index(fields=['expires_at'], name='lnpay_resv_expires_idx'),
        ),
    ]
