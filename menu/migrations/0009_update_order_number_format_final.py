# Generated by Django migration for final menu order number format update

from django.db import migrations
import uuid


def update_menu_order_number_format_final(apps, schema_editor):
    """메뉴 주문번호를 최종 형식으로 업데이트: store_id-menu-YYYYMMDD-해시값 (결제완료일 기준)"""
    MenuOrder = apps.get_model('menu', 'MenuOrder')
    
    # 모든 메뉴 주문을 가져와서 생성일시 순으로 정렬
    menu_orders = MenuOrder.objects.select_related('store').all().order_by('created_at')
    
    updated_count = 0
    for order in menu_orders:
        try:
            # order_number가 None인 경우 건너뛰기
            if not order.order_number:
                continue
                
            # 결제완료일을 기준으로 하되, 없으면 생성일 사용
            if order.paid_at:
                base_date = order.paid_at
            else:
                base_date = order.created_at
                
            store_id = order.store.store_id
            date_str = base_date.strftime('%Y%m%d')  # 20250606 형식
            hash_value = str(uuid.uuid4())[:8].upper()
            
            new_order_number = f"{store_id}-menu-{date_str}-{hash_value}"
            
            # 중복 확인 및 처리
            counter = 0
            
            while MenuOrder.objects.filter(order_number=new_order_number).exists():
                counter += 1
                # 중복이 있으면 새로운 해시값 생성
                hash_value = str(uuid.uuid4())[:8].upper()
                new_order_number = f"{store_id}-menu-{date_str}-{hash_value}"
                
                # 무한루프 방지
                if counter > 100:
                    break
            
            # 주문번호 업데이트
            old_order_number = order.order_number
            order.order_number = new_order_number
            order.save(update_fields=['order_number'])
            
            updated_count += 1
            print(f"Updated MenuOrder {order.id}: {old_order_number} -> {new_order_number}")
            
        except Exception as e:
            print(f"Error updating MenuOrder {order.id}: {str(e)}")
            continue
    
    print(f"Total updated menu orders: {updated_count}")


def reverse_menu_order_number_format_final(apps, schema_editor):
    """역마이그레이션은 지원하지 않음 (데이터 손실 위험)"""
    print("Warning: 메뉴 주문번호 형식 변경의 역마이그레이션은 지원하지 않습니다.")


class Migration(migrations.Migration):

    dependencies = [
        ('menu', '0008_merge_20250707_1239'),
    ]

    operations = [
        migrations.RunPython(
            update_menu_order_number_format_final,
            reverse_menu_order_number_format_final,
        ),
    ] 